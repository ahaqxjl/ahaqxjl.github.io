<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[ToGeek]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://ahaqxjl.github.io/"/>
  <updated>2016-02-05T03:31:30.586Z</updated>
  <id>http://ahaqxjl.github.io/</id>
  
  <author>
    <name><![CDATA[Jordan Xu]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Split flac with cue in linux (Linux Mint 17)]]></title>
    <link href="http://ahaqxjl.github.io/2016/02/05/split_flac_with_cue_linux/"/>
    <id>http://ahaqxjl.github.io/2016/02/05/split_flac_with_cue_linux/</id>
    <published>2016-02-05T03:31:30.586Z</published>
    <updated>2016-02-05T03:31:30.586Z</updated>
    <content type="html"><![CDATA[<h1 id="install-tools"><a href="#Install_tools" class="headerlink" title="Install tools"></a>Install tools</h1><pre><code>sudo apt-get install cuetools shntool flac mp3info
</code></pre><h1 id="split"><a href="#Split" class="headerlink" title="Split"></a>Split</h1><pre><code>shntool split -t &quot;%n.%p-%t&quot; -f albumname.cue -o flac albumname.flac -d output
</code></pre><p><code>%n</code> means track number, <code>%p</code> means artist, <code>%t</code> stands for track title. If <code>-d</code> is not provided, it output split files into current path</p>
<h1 id="add-tagging"><a href="#Add_tagging" class="headerlink" title="Add tagging"></a>Add tagging</h1><pre><code>cuetag albumname.cue *.flac
</code></pre><h1 id="convert"><a href="#Convert" class="headerlink" title="Convert"></a>Convert</h1><p><a href="/2016/01/14/convert_audio_linux_mint_17/">Convert audio in Linux Mint 17</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="install-tools"><a href="#Install_tools" class="headerlink" title="Install tools"></a>Install tools</h1><pre><code>sudo apt-get insta]]>
    </summary>
    
      <category term="Linux" scheme="http://ahaqxjl.github.io/tags/Linux/"/>
    
      <category term="Mint" scheme="http://ahaqxjl.github.io/tags/Mint/"/>
    
      <category term="Ubuntu" scheme="http://ahaqxjl.github.io/tags/Ubuntu/"/>
    
      <category term="audio" scheme="http://ahaqxjl.github.io/tags/audio/"/>
    
      <category term="lossless" scheme="http://ahaqxjl.github.io/tags/lossless/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SSH without password]]></title>
    <link href="http://ahaqxjl.github.io/2016/02/05/ssh_without_password/"/>
    <id>http://ahaqxjl.github.io/2016/02/05/ssh_without_password/</id>
    <published>2016-02-05T03:03:54.217Z</published>
    <updated>2016-02-05T03:03:54.217Z</updated>
    <content type="html"><![CDATA[<p><strong>All steps are on local machine</strong></p>
<h1 id="step-1-gen-ssh-key"><a href="#Step_1-_gen_ssh_key" class="headerlink" title="Step 1. gen ssh key"></a>Step 1. gen ssh key</h1><pre><code>ssh-keygen
</code></pre><h1 id="step-2-pass-key-to-server"><a href="#Step_2-_pass_key_to_server" class="headerlink" title="Step 2. pass key to server"></a>Step 2. pass key to server</h1><pre><code>ssh-copy-id user@serverhost
</code></pre><h1 id="test"><a href="#Test" class="headerlink" title="Test"></a>Test</h1><pre><code>ssh user@serverhost
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p><strong>All steps are on local machine</strong></p>
<h1 id="step-1-gen-ssh-key"><a href="#Step_1-_gen_ssh_key" class="headerlink" title="]]>
    </summary>
    
      <category term="Linux" scheme="http://ahaqxjl.github.io/tags/Linux/"/>
    
      <category term="SSH" scheme="http://ahaqxjl.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Convert audio in Linux Mint 17]]></title>
    <link href="http://ahaqxjl.github.io/2016/01/14/convert_audio_linux_mint_17/"/>
    <id>http://ahaqxjl.github.io/2016/01/14/convert_audio_linux_mint_17/</id>
    <published>2016-01-14T07:45:53.157Z</published>
    <updated>2016-01-14T07:45:53.157Z</updated>
    <content type="html"><![CDATA[<h1 id="install-ffmpeg"><a href="#Install_ffmpeg" class="headerlink" title="Install ffmpeg"></a>Install ffmpeg</h1><p>add ppa</p>
<pre><code>sudo apt-add-repository ppa:mc3man/trusty-media
</code></pre><p>install ffmpeg</p>
<pre><code>sudo apt-get update
sudo apt-get install ffmpeg
</code></pre><h1 id="convert-to-mp3"><a href="#Convert_to_mp3" class="headerlink" title="Convert to mp3"></a>Convert to mp3</h1><pre><code>ffmpeg -i input.ape -b:a 320k output.mp3
</code></pre><p><code>-b:a 320k</code> means bitrate is 320k</p>
<h1 id="convert-all-ape-to-mp3"><a href="#convert_all_ape_to_mp3__3A" class="headerlink" title="convert all ape to mp3 :"></a>convert all ape to mp3 :</h1><pre><code>for x in *.ape; do ffmpeg -i $x -b:a 320k ${x%.ape}.mp3; done
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="install-ffmpeg"><a href="#Install_ffmpeg" class="headerlink" title="Install ffmpeg"></a>Install ffmpeg</h1><p>add ppa</p>
<pre><code]]>
    </summary>
    
      <category term="Linux" scheme="http://ahaqxjl.github.io/tags/Linux/"/>
    
      <category term="Mint" scheme="http://ahaqxjl.github.io/tags/Mint/"/>
    
      <category term="audio" scheme="http://ahaqxjl.github.io/tags/audio/"/>
    
      <category term="ffmpeg" scheme="http://ahaqxjl.github.io/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Install Pillow]]></title>
    <link href="http://ahaqxjl.github.io/2015/12/28/install_pillow/"/>
    <id>http://ahaqxjl.github.io/2015/12/28/install_pillow/</id>
    <published>2015-12-28T08:01:54.977Z</published>
    <updated>2015-12-28T08:01:54.933Z</updated>
    <content type="html"><![CDATA[<h1 id="install-pillow"><a href="#Install_Pillow" class="headerlink" title="Install Pillow"></a>Install Pillow</h1><pre><code>pip install Pillow
</code></pre><h2 id="error-while-installing"><a href="#error_while_installing" class="headerlink" title="error while installing"></a>error while installing</h2><p>ValueError: &#x2013;enable-jpeg requested but jpeg not found, aborting.</p>
<pre><code>sudo apt-get install libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="install-pillow"><a href="#Install_Pillow" class="headerlink" title="Install Pillow"></a>Install Pillow</h1><pre><code>pip install Pi]]>
    </summary>
    
      <category term="Pillow" scheme="http://ahaqxjl.github.io/tags/Pillow/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Virtualenvwrapper tutorial]]></title>
    <link href="http://ahaqxjl.github.io/2015/12/24/virtualenvwrapper/"/>
    <id>http://ahaqxjl.github.io/2015/12/24/virtualenvwrapper/</id>
    <published>2015-12-24T08:18:42.271Z</published>
    <updated>2015-12-24T08:18:42.271Z</updated>
    <content type="html"><![CDATA[<h2 id="install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><pre><code>sudo pip install virtualenvwrapper
</code></pre><h2 id="configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Add following codes into shell profile, such as ~/.zshrc</p>
<pre><code># virtualenvwrapper configuration
# use python3 instead of python
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
# specify virtualenv path
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
# virtualenvs path
export WORKON_HOME=$HOME/virtualenv
# projects path
export PROJECT_HOME=$HOME/Projects
# activate virtualenvwrapper on startup shell
source /usr/local/bin/virtualenvwrapper.sh
</code></pre><p>After that, execute <code>source ~/.zshrc</code> to make configuration work.</p>
<h2 id="use-virtualenvwrapper"><a href="#Use_virtualenvwrapper" class="headerlink" title="Use virtualenvwrapper"></a>Use virtualenvwrapper</h2><h3 id="create-virtualenv"><a href="#Create_virtualenv" class="headerlink" title="Create virtualenv"></a>Create virtualenv</h3><pre><code>mkvirtualenv envname
</code></pre><p>Then it will create a virtualenv in the $WORKON_HOME path</p>
<h3 id="activate-virtualenv"><a href="#Activate_virtualenv" class="headerlink" title="Activate virtualenv"></a>Activate virtualenv</h3><pre><code>workon envname
</code></pre><p>use <code>deactivate</code> to exit virtualenv</p>
<h3 id="list-all-virtualenv"><a href="#List_all_virtualenv" class="headerlink" title="List all virtualenv"></a>List all virtualenv</h3><pre><code>lsvirtualenv
</code></pre><h3 id="execute-command-on-all-virtualenvs"><a href="#Execute_command_on_all_virtualenvs" class="headerlink" title="Execute command on all virtualenvs"></a>Execute command on all virtualenvs</h3><pre><code>allvirtualenv command
</code></pre><p>such as:</p>
<pre><code># update pip for all virtualenvs
allvirtualenv pip install -U pip
</code></pre><h3 id="navigate"><a href="#Navigate" class="headerlink" title="Navigate"></a>Navigate</h3><pre><code># Open path of current virtualenv
cdvirtualenv
# Open path of site packages of current vritualenv
cdsitepackages
# List all site packages of current virtualenv
lssitepackages
# connect working project with current virtualenv
setvirtualenvproject
# go to working directory of project connected to current virtualenv
cdproject
</code></pre><h3 id="get-help"><a href="#Get_help" class="headerlink" title="Get help"></a>Get help</h3><p>List all commands and description of virtualenvwrapper</p>
<pre><code>virtualenvwrapper
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><pre><code>sudo pip install virtualenvwrapper
</code>]]>
    </summary>
    
      <category term="virtualenv" scheme="http://ahaqxjl.github.io/tags/virtualenv/"/>
    
      <category term="virtualenvwrapper" scheme="http://ahaqxjl.github.io/tags/virtualenvwrapper/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Prepare development environment of Django on Ubuntu]]></title>
    <link href="http://ahaqxjl.github.io/2015/12/22/dev_env_for_django/"/>
    <id>http://ahaqxjl.github.io/2015/12/22/dev_env_for_django/</id>
    <published>2015-12-22T08:00:22.855Z</published>
    <updated>2015-12-22T08:00:22.819Z</updated>
    <content type="html"><![CDATA[<h1 id="prepare-development-environment-of-django-on-ubuntu"><a href="#Prepare_development_environment_of_Django_on_Ubuntu" class="headerlink" title="Prepare development environment of Django on Ubuntu"></a>Prepare development environment of Django on Ubuntu</h1><h2 id="install-lamp"><a href="#Install_LAMP" class="headerlink" title="Install LAMP"></a>Install LAMP</h2><p>Django will run on MySQL db, to install MySQL db, tasksel is recommended way to install LAMP server.</p>
<pre><code>sudo apt-get install tasksel
sudo tasksel
sudo apt-get install phpmyadmin
</code></pre><h2 id="create-virtualenv"><a href="#Create_virtualenv" class="headerlink" title="Create virtualenv"></a>Create virtualenv</h2><pre><code>virtualenv -p python3 --no-site-packages ~/virtualenv/py3dj8
</code></pre><p>where <code>-p</code> specify python exec name, <code>--no-site-packages</code> make a clean copy of current python3 environment, <code>~/virtualenv/py3dj8</code> is your virtualenv path for developing django project.</p>
<h2 id="active-virtualenv"><a href="#Active_virtualenv" class="headerlink" title="Active virtualenv"></a>Active virtualenv</h2><pre><code>source virtualenv/py3dj8/bin/activate
</code></pre><h2 id="prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><pre><code>sudo apt-get install libmysqlclient-dev
sudo apt-get install python3-dev
</code></pre><h2 id="install-requirements"><a href="#Install_requirements" class="headerlink" title="Install requirements"></a>Install requirements</h2><pre><code>pip install -r requirements.txt
</code></pre><h2 id="test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><h3 id="create-test-project"><a href="#Create_test_project" class="headerlink" title="Create test project"></a>Create test project</h3><pre><code>mkdir projectpath
cd projectpath
django-admin startproject projectname
</code></pre><h3 id="configure-database-settings"><a href="#Configure_database_settings" class="headerlink" title="Configure database settings"></a>Configure database settings</h3><pre><code>vim projectname/projectname/settings.py
</code></pre><p>Change DataBase settings as following:</p>
<pre><code>DATABASES = {
    &apos;default&apos;: {
        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,
        &apos;OPTIONS&apos;: {
            &apos;read_default_file&apos;: &apos;/path/to/my.cnf&apos;,
        },
    }
}
</code></pre><p>my.cnf:</p>
<pre><code>[client]
database = NAME
user = USER
password = PASSWORD
default-character-set = utf8
</code></pre><h3 id="create-database"><a href="#Create_database" class="headerlink" title="Create database"></a>Create database</h3><pre><code>mysql -u root -p
create database dbname;
</code></pre><h3 id="migrate-data"><a href="#Migrate_data" class="headerlink" title="Migrate data"></a>Migrate data</h3><pre><code>python manage.py migrate
</code></pre><h3 id="run-server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h3><pre><code>python manage.py runserver
</code></pre><p>Make sure above commands are running under your virtualenv</p>
<hr>
<h2 id="zsh-related-plugins"><a href="#zsh_related_plugins" class="headerlink" title="zsh related plugins"></a>zsh related plugins</h2><pre><code>vim ~/.zshrc
</code></pre><p>add django plugin as following:</p>
<pre><code>plugins=(git, django, virtualenv, pip)
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="prepare-development-environment-of-django-on-ubuntu"><a href="#Prepare_development_environment_of_Django_on_Ubuntu" class="headerlin]]>
    </summary>
    
      <category term="Django" scheme="http://ahaqxjl.github.io/tags/Django/"/>
    
      <category term="Linux" scheme="http://ahaqxjl.github.io/tags/Linux/"/>
    
      <category term="Mint" scheme="http://ahaqxjl.github.io/tags/Mint/"/>
    
      <category term="Ubuntu" scheme="http://ahaqxjl.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Actions After Installed Linux Mint 17.2]]></title>
    <link href="http://ahaqxjl.github.io/2015/12/22/after_install_mint_17/"/>
    <id>http://ahaqxjl.github.io/2015/12/22/after_install_mint_17/</id>
    <published>2015-12-22T07:54:19.191Z</published>
    <updated>2015-12-22T07:54:19.151Z</updated>
    <content type="html"><![CDATA[<h1 id="actions-after-installed-linux-mint-172"><a href="#Actions_After_Installed_Linux_Mint_17-2" class="headerlink" title="Actions After Installed Linux Mint 17.2"></a>Actions After Installed Linux Mint 17.2</h1><ol>
<li>Update package source list with Software Sources</li>
<li>Download and install Sogou Pinyin (logout and then config)</li>
<li>Install Google Chrome</li>
<li>Install curl with apt-get</li>
<li>Install virtualenv &amp; Django</li>
<li>Install Gvim with spf13</li>
</ol>
<h2 id="install-google-chrome"><a href="#Install_Google_Chrome" class="headerlink" title="Install Google Chrome"></a>Install Google Chrome</h2><pre><code>wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
sudo sh -c &apos;echo &quot;deb http://dl.google.com/linux/chrome/deb/ stable main&quot; &gt;&gt; /etc/apt/sources.list.d/google-chrome.list&apos;
sudo apt-get update 
sudo apt-get install google-chrome-stable 
</code></pre><h2 id="install-virtualenv"><a href="#Install_virtualenv" class="headerlink" title="Install virtualenv"></a>Install virtualenv</h2><pre><code>wget https://bootstrap.pypa.io/get-pip.py
sudo python3 get-pip.py 
sudo pip install virtualenv
</code></pre><h2 id="configure-virtualenv-install-django"><a href="#Configure_virtualenv__26amp_3B_Install_Django" class="headerlink" title="Configure virtualenv &amp; Install Django"></a>Configure virtualenv &amp; Install Django</h2><pre><code>virtualenv ./virtualenv/py3
cd virtualenv/py3/
source bin/activate
pip install Django
</code></pre><h2 id="install-gvim-with-spf13"><a href="#Install_Gvim_with_spf13" class="headerlink" title="Install Gvim with spf13"></a>Install Gvim with spf13</h2><pre><code>sudo apt-get install vim-gnome 
curl http://j.mp/spf13-vim3 -L -o - | sh
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="actions-after-installed-linux-mint-172"><a href="#Actions_After_Installed_Linux_Mint_17-2" class="headerlink" title="Actions After I]]>
    </summary>
    
      <category term="Linux" scheme="http://ahaqxjl.github.io/tags/Linux/"/>
    
      <category term="Mint" scheme="http://ahaqxjl.github.io/tags/Mint/"/>
    
  </entry>
  
</feed>
